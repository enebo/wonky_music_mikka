require 'rubygems'
require 'mikka'
require File.dirname(__FILE__) + '/lib/jl1.0.1.jar'

java_import 'javazoom.jl.player.Player'

class Band < Struct.new(:members); end

class Conductor < Mikka::Actor
  def receive(msg)
    case msg
    when Band # received a band to conduct
      msg.members.each { |member| member << "start" }
    when "end" # instrument wants end sound played
      context.reply "end"
    end
  end
end

class Instrument < Mikka::Actor
  def play(end_version=false)
    file = "mp3/" + self.class.name + (end_version ? "End.mp3" : ".mp3")
    puts "playing #{file}"
    File.open(file) { |io| Player.new(io.to_inputstream).play }
    puts "done playing #{file}"
  end
  
  def receive(instruction)
    case instruction
    when "start" then play
    when "end" then play(true)
    end
  end
end

class Guitar < Instrument; end
class Bass < Instrument; end
class Drum < Instrument
  def play(end_version=false)
    super
    # Ask the conductor to request the end sound to be played
    context.reply("end") unless end_version
  end
end

conductor = Mikka.actor_of(Conductor).tap { |c| c.start }

members = [Guitar, Drum, Bass].map do |inst_class|
  Mikka.actor_of(inst_class).tap { |inst| inst.start }
end

conductor << Band.new(members)

sleep 40
puts "Shutting down"

Mikka.registry.shutdown_all
